<?php$shop = 'big-home-shop-1.myshopify.com';$api_key = 'ccd90f62eb38b87c661e7290c45c30d4';$token = '652380170f5480f265a3dc3b2c099bac';$secret = '704e91c5761c4e5d71a20f01e1c414ea';require 'shopify.php';$page = $_GET['page'];$sc = new ShopifyClient($shop, $token, $api_key, $secret);try{	// Get all products	$products = $sc->call('GET', '/admin/products.json', array('limit'=>50,'page'=>$page));		echo "<pre>";	print_r($products);	exit;		// Create a new recurring charge		foreach ($products as $k=>$v) {		//echo "<pre>";		//print_r($v);		$productid = $v['id'];			/*		$title = $v['variants'][0]['title'];		$sku = $v['variants'][0]['sku'];		$vendor = $v['vendor'];		$product_type = $v['product_type'];		*/		$type = $v['product_type'];				$charge = array		(			"variant"=>array (					   "option1" => "Sample"			   "price" => "0.00"			)		);								$gdgg = $sc->call('PUT', "/admin/products/298000781/variants.json", $charge);		echo "here:$gdgg";							}	try	{				// API call limit helpers		//echo $sc->callsMade(); // 2		//echo $sc->callsLeft(); // 498		//echo $sc->callLimit(); // 500	}	catch (ShopifyApiException $e)	{		// If you're here, either HTTP status code was >= 400 or response contained the key 'errors'	}	}catch (ShopifyApiException $e){	/* 	 $e->getMethod() -> http method (GET, POST, PUT, DELETE)	 $e->getPath() -> path of failing request	 $e->getResponseHeaders() -> actually response headers from failing request	 $e->getResponse() -> curl response object	 $e->getParams() -> optional data that may have been passed that caused the failure	*/}catch (ShopifyCurlException $e){	// $e->getMessage() returns value of curl_errno() and $e->getCode() returns value of curl_ error()}?>